[{"content":"Summary of Activities On May 13, our team focused on two major tasks:\nFinalizing the interview questions for animal shelters and organizations. Mapping responsibilities and categorizing non-functional requirements (NFRs) for each team member, aligned with key stakeholders. Interview Question Design – Animal Shelter Staff We brainstormed and refined a comprehensive list of questions to ask shelter staff in our upcoming interviews. These questions aim to deepen our understanding of real-world workflows, adoption procedures, and the shelter’s technical readiness to collaborate with our system.\nKey Question Categories: Shelter Operations \u0026amp; Policy Do you assign IDs to every cat? Do you track released cats, and how? What criteria determine whether a cat is adoptable or released? How do you intake stray cats and prepare them for adoption? Adoption Process What are the main steps from visitor to legal adoption? What is the most common reason for returned adoptions? How long does a typical adoption take? Data Collaboration \u0026amp; Technical Feasibility Are you open to uploading images to a system like ours? How tech-friendly are your staff? Could mobile uploads help? Do you already collect multi-angle photos? If not, is it feasible? How much time would it typically take to register one cat? What metadata (age, vaccination, neutering, etc.) is stored? Communication Preferences Would you prefer direct contact with users or filtered communication via the app? How should the app handle messaging between your staff and adopters? NFR \u0026amp; Stakeholder Responsibility Assignment We held a group planning session to assign stakeholders (RE) and non-functional requirement (NFR) categories to team members. These assignments were based on relevance to our system and individual roles. This also involved grouping NFRs into three main categories:\nStakeholders (RE – Requirements Elicitation) A: General Citizens / Volunteers – Jocelyn B: System Administrator – Anoma C: Animal Shelter Staff – Jonathan D: External Ethics \u0026amp; Law – Kanato E: Performance \u0026amp; Adoption Process – Parth F: Local Governments – Yukiya G: System Developers/Engineers – Ryusei Non-Functional Requirement Categories: Product-Related Usability (C) Efficiency (B) Dependability (B) Security (G) Performance (E) Space optimization (A) Organizational Environmental fit (F) Operational ease (A) Development feasibility (F) External Regulatory requirements Ethical and legal considerations (D) Security/safety compliance (D) This mapping will support a more structured approach during system modeling, requirement verification, and documentation.\nWe have talked about the interview questions for stakeholders.\n","permalink":"https://xknt21.github.io/contents/may13/","summary":"\u003ch1 id=\"summary-of-activities\"\u003eSummary of Activities\u003c/h1\u003e\n\u003cp\u003eOn May 13, our team focused on two major tasks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFinalizing the interview questions for animal shelters and organizations.\u003c/li\u003e\n\u003cli\u003eMapping responsibilities and categorizing non-functional requirements (NFRs) for each team member, aligned with key stakeholders.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch1 id=\"interview-question-design--animal-shelter-staff\"\u003eInterview Question Design – Animal Shelter Staff\u003c/h1\u003e\n\u003cp\u003eWe brainstormed and refined a comprehensive list of questions to ask shelter staff in our upcoming interviews. These questions aim to deepen our understanding of real-world workflows, adoption procedures, and the shelter’s technical readiness to collaborate with our system.\u003c/p\u003e","title":"[Group Documentation] May 13 2025"},{"content":"Summary of Activities On May 6, our group focused on clarifying key system behaviors and preparing in-depth technical questions for our upcoming consultation with the professor. This work session was dedicated to translating our conceptual design into more concrete technical concerns, especially related to cat image handling, recognition, and re-identification processes.\nTechnical Planning and Discussion We discussed the expected photo upload process from general users, particularly from smartphones. While the feature itself was already listed as a requirement, we focused on exploring the technical details and potential user behaviors. We identified the need to accept .jpg images from mobile users and started researching what image formats would be optimal for internal processing and model input. We agreed to seek expert input on whether conversion to other formats (e.g., .webp, .tiff) is recommended for performance or quality reasons. We talked about challenges users might introduce, such as blurry images or inconsistent angles, and decided to ask about data pre-processing techniques to handle these cases effectively.\nQuestions for Expert Consultation We prepared a list of specific technical questions to ask our professor or external advisors. These are aimed at improving the robustness and scalability of our AI system.\nRecognition Dataset Balance What ratio of cat images to non-cat images should we aim for when testing the object detection model? Re-identification Dataset Requirements What is the minimum number of images per individual cat that we should request from shelters? Are there specific angles (front, side, top) or lighting conditions that we should prioritize? Image Format \u0026amp; Handling Users will upload .jpg files. What is the best internal format to convert them to for training and inference? What tools or libraries are recommended for handling this conversion efficiently? Data Preprocessing What preprocessing methods are helpful to deal with partially blurry images? What techniques have you personally found essential in preparing data for training image models? Model Training Stability During training, if the model’s parameters don’t converge, what strategies can be applied? If you haven’t encountered this issue, is it mainly because the dataset was sufficiently large? Multi-Model Integration Concerns We plan to integrate multiple models (e.g., detection and re-identification). What are the typical problems (e.g., latency, conflicts) and how can we prepare for them? Key Insights and Planning Outcomes We realized that designing a user-friendly upload flow is just one side of the challenge — we also need to make sure the image data quality is good enough for reliable recognition. The importance of dataset quality and structure was emphasized, especially in terms of representing each individual cat adequately for re-identification. Our upcoming discussions with professors will focus on real-world experiences and best practices, rather than just theoretical knowledge.\nFocus of the Day: Designing User Flow and Shelter Interaction Logic On May 8, our team focused on designing detailed user workflows for both general users (citizens/volunteers) and shelter/organization staff. This session aimed to visualize how the system will manage image uploads, cat identification, profile handling, and communication between shelters and the app.\nUser Flow (Citizens/Volunteers) User Entry Options: Can start without signing up. Optional sign-up flow includes: full name, email, phone number, and password. Main Flow: User uploads a photo of a stray cat using the app. The system performs cat recognition: If a match is found, the user sees the cat’s profile page, which contains: Option to report injured or want to adopt. If no match is found: User is given the option to report a problem. A form allows the user to share location and photo. If signed in, personal info is auto-filled; if not, the user must input: Full name Phone number Email The report is sent to the shelter, and a confirmation email is issued to the user’s email address. Shelter / Organization Flow Designed administrative functions for shelters: Add New Cat Update Cat Profile When updating or adding a profile: Upload multiple images (exact number TBD) Enter cat details: Approximate age Vaccination status (including date if available) Whether the cat is neutered Also discussed the need to specify which shelter/organization owns the profile. Edit profile/pics functionality was included for future flexibility. Notes and Open Questions How many pictures per cat are necessary for reliable re-identification? Should vaccination input require both status and date? What should the fallback process be when recognition fails repeatedly? Outcomes Defined end-to-end user flows from photo upload to shelter contact. Visualized system branching logic based on recognition results. Clarified data requirements for cat profiles from shelters. Designed interaction model between general users and shelters through forms and email notifications. ","permalink":"https://xknt21.github.io/contents/may6/","summary":"\u003ch1 id=\"summary-of-activities\"\u003eSummary of Activities\u003c/h1\u003e\n\u003cp\u003eOn May 6, our group focused on clarifying key system behaviors and preparing in-depth technical questions for our upcoming consultation with the professor. This work session was dedicated to translating our conceptual design into more concrete technical concerns, especially related to cat image handling, recognition, and re-identification processes.\u003c/p\u003e\n\u003ch1 id=\"technical-planning-and-discussion\"\u003eTechnical Planning and Discussion\u003c/h1\u003e\n\u003cp\u003eWe discussed the expected photo upload process from general users, particularly from smartphones. While the feature itself was already listed as a requirement, we focused on exploring the technical details and potential user behaviors.\nWe identified the need to accept .jpg images from mobile users and started researching what image formats would be optimal for internal processing and model input. We agreed to seek expert input on whether conversion to other formats (e.g., .webp, .tiff) is recommended for performance or quality reasons.\nWe talked about challenges users might introduce, such as blurry images or inconsistent angles, and decided to ask about data pre-processing techniques to handle these cases effectively.\u003c/p\u003e","title":"[Group Documentation] May 6 2025"},{"content":"Smart Re-Identification Application for Stray Cats Post-SNR Program Problem Elicitation / Background Urban animal shelters, particularly in regions like Taiwan, are heavily burdened and face legal or ethical restrictions against euthanizing animals. Following the Shelter-Neuter-Return (SNR) program, many cats are released back into the urban environment without systematic tracking, making it difficult to monitor their wellbeing or promote their adoption.\nThere is a growing societal need for a solution that maintains a connection with these cats after their return, fostering animal welfare and enabling post-release care and adoption opportunities.\nRelated Applications Current applications primarily focus on pet identification and lost pet recovery (e.g., PetFinder, PawBoost). However, few address the unique needs of tracking and re-identifying community cats post-SNR programs at a societal scale.\nAdditionally, existing apps generally require owners\u0026rsquo; cooperation, while stray cats post-SNR lack dedicated guardians, highlighting a gap in service.\nLiterature Review and Government Reports Crawford Cat Dataset (Kaggle): A dataset containing labeled images of cats, useful for training initial models. \u0026ldquo;Siamese Networks for Cat Re-identification\u0026rdquo; (PapersWithCode): Demonstrates the efficacy of Siamese Networks in distinguishing between highly similar individual animals. Government Reports: Recent e-petitions in Taiwan indicate increasing public demand for humane stray animal management without euthanasia, emphasizing the importance of SNR initiatives. Other References: arXiv 2501.02112v1 - Latest methods for animal re-identification. HAL Archive Paper - Research on sustainable animal tracking. Springer Book Chapter - Machine learning for animal welfare solutions. Vision and Goals Promote Adoption: Maintain adoption opportunities post-release. Enhance Social Connection: Build a cat-friendly urban culture through awareness and interaction. Track Wellbeing: Monitor health and safety of community cats after release. Verify Vaccination: Enable instant verification of vaccination status through recognition. Objectives - Features to be Realized Develop a mobile application with real-time cat recognition via camera input. Display cat profiles including health, vaccination, and adoption information. Geolocation tagging to track areas where cats are frequently sighted. User feedback system to report injuries, illnesses, or sightings. Dashboards to visualize model performance (precision, recall). Scope (How Big the Problem Is) Tens of thousands of cats participate in SNR programs annually in Taiwan alone. Urban environments are dynamic and cats are mobile, making continuous manual tracking impossible without technological aid. This project targets urban centers with a dense SNR population, aiming to scale nationally or internationally.\nLimitations and Risks Accuracy Challenges: Recognizing individual cats with subtle visual differences may cause errors. Data Quality: User-submitted images may be blurry, low-quality, or mislabeled.\nPrivacy Concerns: Collecting geolocation data needs careful ethical consideration.\nAdoption Reluctance: Users may scan cats but few may move forward with adoptions.\nSustainability (Future Extensions) Integrate with shelter databases for automatic record updates. Expand to other species (e.g., dogs in TNR programs). Implement reward systems to encourage citizen participation. Utilize blockchain for decentralized, transparent health record-keeping. Data Acquisition Sources: Public datasets, shelter photo archives, user-submitted images. Methods: Collaboration with shelters for multi-angle pre-release photos. Data augmentation techniques to artificially expand datasets. Web scraping from shelter websites and social media. Preprocessing using OpenCV (cropping, noise reduction, normalization). Data Processing Apply image preprocessing (cropping, resizing, normalizing). Organize datasets by unique individual cat ID when available. Augment data for robustness against lighting and angle variations. Data Science Techniques Recognition Models: Convolutional Neural Networks (CNNs) for feature extraction. YOLOv2 and MobileNet for efficient, mobile-friendly detection. Siamese Networks for fine-grained individual cat re-identification. Evaluation Metrics: Precision, Recall, F1-score, Model Inference Speed. Existing Prototypes Siamese Networks for pet re-identification exist but are not widely adopted in stray tracking scenarios. YOLO and MobileNet have lightweight mobile-ready models but need fine-tuning for the cat-specific domain. ","permalink":"https://xknt21.github.io/contents/apr24/","summary":"\u003ch1 id=\"smart-re-identification-application-for-stray-cats-post-snr-program\"\u003eSmart Re-Identification Application for Stray Cats Post-SNR Program\u003c/h1\u003e\n\u003ch2 id=\"problem-elicitation--background\"\u003eProblem Elicitation / Background\u003c/h2\u003e\n\u003cp\u003eUrban animal shelters, particularly in regions like Taiwan, are heavily burdened and face legal or ethical restrictions against euthanizing animals. Following the Shelter-Neuter-Return (SNR) program, many cats are released back into the urban environment without systematic tracking, making it difficult to monitor their wellbeing or promote their adoption.\u003cbr\u003e\nThere is a growing societal need for a solution that maintains a connection with these cats after their return, fostering animal welfare and enabling post-release care and adoption opportunities.\u003c/p\u003e","title":"[Group Documentation] April 24 2025"},{"content":"Recognition Application for Cats after SNR Program Problem Statement Urban animal shelters in many regions—such as Taiwan—are overburdened and face legal or ethical restrictions against euthanizing animals. As a result, many cats undergo SNR (Shelter, Neuter, Return) programs and are returned to city streets. Post-release, shelters lose track of these cats, making it difficult to monitor their health or facilitate potential adoptions. There\u0026rsquo;s a need for a data-driven system that allows society to stay connected to these animals, even after release.\nData Acquisition Sources of Data: Existing public cat image datasets such as the Crawford Cat Dataset on Kaggle.\nPhotos taken by animal shelters before cats are released (multiple angles per cat).\nOptional: user-submitted photos via mobile apps for additional training and validation.\nData Collection Methods: Collaborate with animal shelters to collect and organize multi-angle images of cats pre-release. Apply data augmentation techniques to increase dataset size and variety. Use OpenCV or other preprocessing libraries to clean and normalize the dataset (e.g., cropping, resizing). Web scraping from shelter websites, google photos where we can see users upload photos and reviews, SNS.\nAnalytical Tools and Techniques: Implement Convolutional Neural Networks (CNNs) to enable visual recognition of individual cats. Test models like YOLOv2 or MobileNet for real-time, efficient image recognition on mobile devices. Apply noise reduction, normalization, and image labeling to ensure dataset quality. Use Siamese Networks or re-identification models to distinguish similar-looking cats.\nModel Evaluation: Split the dataset into training and testing sets. Measure inference precision and performance to evaluate the model’s effectiveness.\nData Presentation Visualization and Engagement Strategies: Develop a mobile application with a built-in cat recognition camera feature. Upon recognition, the app shows a profile of the cat (name, breed, last vaccination, adoption contact info). Include adoption status, last known health updates, and geolocation tagging. Visualize model performance with metrics such as precision and recall via dashboards. User Experience Features: Citizens can scan street cats using their phones to learn more or adopt. Shelters can track the reappearance of released cats and monitor wellbeing. Build a feedback loop where users can report injuries or concerns about specific cats. Objective/Goals Promote Adoption: Enable adoptions even after cats are released from shelters.\nEnhance Social Connection: Create a cat-friendly environment by integrating cats into the urban social fabric.\nTrack Post-Release Wellbeing: Monitor the condition of cats after release to improve urban animal welfare.\nVerify Vaccination Status: Instantly identify if a cat has been vaccinated, promoting safe and informed interactions between humans and cats.\nTarget Clients and Users Primary Clients: Animal shelters and SNR programs.\nEnd Users: Citizens, animal lovers, and potential adopters.`\nResearch References: https://www.kaggle.com/datasets/crawford/cat-dataset/data https://arxiv.org/pdf/2501.02112v1 https://hal.science/hal-03501010/ https://link.springer.com/chapter/10.1007/978-3-030-59612-5_7 https://paperswithcode.com/paper/siamese-networks-for-cat-re-identification\nNotes: There are websites/community pages, where people post their cats with multiple pictures of the same cat, and refer to the syllabus on what to do next. For now, writing a good project proposal\nProblem elicitation/background Related application Literature review/government reports/any papers Brainstorming notes: (Participatory Budgeting System) Decide Madrid: Link: https://decide.madrid.es/ https://congress.crowd.law/files/decide-madrid-case-study.pdf (further details and documentation) Explanation: Website where you can make proposals, vote in citizen consultations, propose, support, or vote on projects with participatory budgets, decide on municipal regulations, and open debates to exchange opinions with other people.\nConsul: Link: https://consulproject.nl/en/ (Website) https://consulproject.nl/assets/documents/consul_executive_dossier_nl.pdf (further details and documentation) Explanation: Consul is the most comprehensive digital tool for citizen participation, enabling an open, transparent and democratic government.\nIdeas: We could potentially introduce a system that filters out non-sense inputs from the citizens. Another idea is to create an approval system using a machine learning model or NLP model to filter out suggestions that are most likely not approved by the government or implement a system where a certain suggestion must reach a certain threshold to either be implemented or suggested in the first place.\nLow-Light Area Detecting Software: Problem Statement: Inadequate street lighting poses serious risks to public safety, including increased crime rates, higher chances of accidents, and reduced visibility for pedestrians and vehicles. Many urban and suburban areas lack comprehensive monitoring systems to identify regions with poor night-time illumination. Manual surveys are time-consuming, costly, and often outdated by the time they are compiled. There is a pressing need for an automated, scalable solution that can analyze geotagged nighttime imagery to detect and map low-light areas.\nObjective Statement: This software aims to utilize machine learning and image processing techniques to identify underlit regions using publicly available or crowdsourced street-level images and generate a dynamic heatmap to aid city planners and safety authorities in prioritizing lighting improvements.\nData Acquisition: Data will be obtained from open-source street view images available through sources like Google StreetView API. Further, we will be able to train a machine learning model to detect the presence of street lamps using images present on the Open Source Image Dataset V7 by Google Developers. The images from that dataset will be used for all the training, validation, and testing processes. As for the geotagged images, we will primarily use StreetView API, and we will also collect a few images ourselves.\nData Processing: Image processing will be used in this project idea for detecting streetlights. First the image will be segmented, and then the model will detect the presence of the streetlight. The YOLOv8 pretrained machine learning model will be used for this purpose.\nData Sources: Google StreetView API: https://developers.google.com/maps/documentation/streetview/overview Open-Source Image Dataset V7: https://storage.googleapis.com/openimages/web/index.html\nSimilar Idea: https://umap.openstreetmap.fr/ja/map/map_285407#16/34.9972/138.4414\nTask: (Until April 24, 2025) Project proposal, it has to have the problem definition , related applications and literature or governmental report. Data or method..how it should be established. Literature survey with similar applications and mention pros and cons. Make sure that everyone is on the page about the idea . Decide what we actually want to do.\n","permalink":"https://xknt21.github.io/contents/apr22/","summary":"\u003ch1 id=\"recognition-application-for-cats-after-snr-program\"\u003eRecognition Application for Cats after SNR Program\u003c/h1\u003e\n\u003ch2 id=\"problem-statement\"\u003eProblem Statement\u003c/h2\u003e\n\u003cp\u003eUrban animal shelters in many regions—such as Taiwan—are overburdened and face legal or ethical restrictions against euthanizing animals. As a result, many cats undergo SNR (Shelter, Neuter, Return) programs and are returned to city streets. Post-release, shelters lose track of these cats, making it difficult to monitor their health or facilitate potential adoptions. There\u0026rsquo;s a need for a data-driven system that allows society to stay connected to these animals, even after release.\u003c/p\u003e","title":"[Group Documentation] April 22 2025"},{"content":"Citizen-Based Participatory Budget System (general idea for now, we have a few ideas for data processing, but don’t know which one to choose) Problem Statement Participatory budgeting (PB) empowers citizens to influence how public funds are allocated. However, challenges persist in ensuring fairness, transparency, and effective data utilization within these processes. Traditional methods may not adequately capture diverse community needs or leverage data-driven insights for optimal decision-making.​\nData Acquisition Sources of Data:\nHistorical PB election data from platforms like Pabulib, encompassing over 650 Polish PB elections.\nOpen budget data from government portals and initiatives like Open Spending.\nSurvey responses and feedback collected via mobile apps, social media, and CRM systems.​\nData Collection Methods:\nUtilize tools such as Pabutools for parsing and organizing PB datasets.\nConduct mobile surveys and community outreach to gather qualitative data on citizen preferences and sentiments.​\nData Processing and Analysis Analytical Tools and Techniques:\nEmploy Pabustats to simulate outcomes under various PB rules (e.g., Method of Equal Shares vs. Utilitarian Greedy) to assess fairness and utility.\nApply machine learning models to learn and generate aggregation rules that balance social welfare and representation.\nUse natural language processing (NLP) to analyze public sentiment from discussion forums and survey responses.\nImplement clustering or regression models to identify features in PB software that correlate with higher participation rates.​\nhttps://arxiv.org/abs/2305.11035\nData Presentation Visualization and Engagement Strategies:\nDevelop interactive dashboards and visualizations (e.g., budget allocation maps, cost-benefit charts) to enhance transparency.\nUse platforms like Open Spending to create accessible and engaging representations of budget data.\nConduct A/B testing with different ballot formats (e.g., approval vs. score voting) to determine impacts on voter satisfaction and project diversity.\nLeverage mobile applications and social media channels to disseminate information and gather real-time feedback from citizens.​\nhttps://www.ijcai.org/proceedings/2023/0297.pdf\nReferences P. Faliszewski et al., \u0026ldquo;Participatory Budgeting: Data, Tools, and Analysis,\u0026rdquo; arXiv preprint arXiv:2305.11035, 2023. arXiv​arXiv+3Google Scholar+3comsoc-community.org+3\nR. Fairstein et al., \u0026ldquo;Learning Aggregation Rules in Participatory Budgeting: A Data-Driven Approach,\u0026rdquo; arXiv preprint arXiv:2412.01864, 2024. https://arxiv.org/pdf/2412.01864\nH. L. Schachter, \u0026ldquo;Citizen Participation in the Budget Process and Local Government Accountability: Case Studies of Organizational Learning from the United States and South Korea,\u0026rdquo; ResearchGate, 2023.\nhttps://www.redalyc.org/journal/2352/235272781008/html/\nConsul government citizen based budget participatory details:\n4. https://www.google.com/url?sa=t\u0026amp;rct=j\u0026amp;q=\u0026amp;esrc=s\u0026amp;source=web\u0026amp;cd=\u0026amp;ved=2ahUKEwjpvoL85dyMAxXca_UHHYQvHNsQFnoECBoQAQ\u0026amp;url=https%3A%2F%2Fconsulproject.nl%2Fassets%2Fdocuments%2Fconsul_dossier_nl.pdf\u0026amp;usg=AOvVaw1CBwzFMjlkfd8aJX8-Xnac\u0026amp;opi=89978449 5. https://consuldemocracy.org 6. https://decide.madrid.es\n","permalink":"https://xknt21.github.io/contents/apr17/","summary":"\u003ch2 id=\"citizen-based-participatory-budget-system-general-idea-for-now-we-have-a-few-ideas-for-data-processing-but-dont-know-which-one-to-choose\"\u003eCitizen-Based Participatory Budget System (general idea for now, we have a few ideas for data processing, but don’t know which one to choose)\u003c/h2\u003e\n\u003ch3 id=\"problem-statement\"\u003eProblem Statement\u003c/h3\u003e\n\u003cp\u003eParticipatory budgeting (PB) empowers citizens to influence how public funds are allocated. However, challenges persist in ensuring fairness, transparency, and effective data utilization within these processes. Traditional methods may not adequately capture diverse community needs or leverage data-driven insights for optimal decision-making.​\u003c/p\u003e\n\u003ch3 id=\"data-acquisition\"\u003eData Acquisition\u003c/h3\u003e\n\u003cp\u003eSources of Data:\u003c/p\u003e","title":"[Group Documentation] April 17 2025"},{"content":"","permalink":"https://xknt21.github.io/presentation/","summary":"","title":"Presentation"},{"content":"","permalink":"https://xknt21.github.io/system/","summary":"","title":"System Design Document"},{"content":"","permalink":"https://xknt21.github.io/architecture/","summary":"","title":"System Architecture"},{"content":"Ideas: Toilet Finder App It helps users find nearby public restrooms. real-time crowd data, wheelchair accessibility, user reviews, location maps, and elevator info.\nParking Finder App It shows available parking spaces near sightseeing spots. real-time availability, price comparison, distance to destination.\nCommunity feedback participatory budgetary system Crowd sourcing Use geolocation Monitor progress, suggest, discuss, vote etc Image processing Machine learning based rating system -\u0026gt; Agree or Disagree -\u0026gt; Motivates their transparency Citizen Based Participatory Budgeting System Data Sets from Government website Gather feedbacks from Citizens Analyze feedback to improve the quality and motivate their transparency by being monitored Smart Food Scanner: A Personalised Ingredient Detection App Many international students and residents in Japan, including those who follow halal, vegetarian, vegan diets, or have specific food allergies, often face difficulties identifying suitable food options in convenience stores due to language barriers and unclear ingredient labelling.\nA mobile application that allows users to scan food labels or take a photo to identify ingredients can be highly beneficial. The app would scan product labels and highlight ingredients based on the user’s dietary preferences or restrictions, such as alcohol, pork, animal-based additives, or allergens like nuts and gluten. Users can also scan barcodes to check if a product is halal-certified, vegetarian-friendly, or allergy-safe. To enhance the experience, users can contribute by reporting new diet-friendly products, and the app will provide ingredient translations in English, Arabic, and other languages for those who cannot read Japanese. A built-in database of certified products in Japan and a community feature for sharing reviews or recommendations will further support users in making safe and informed food choices. ","permalink":"https://xknt21.github.io/contents/apr15/","summary":"\u003ch2 id=\"ideas\"\u003eIdeas:\u003c/h2\u003e\n\u003ch3 id=\"toilet-finder-app\"\u003eToilet Finder App\u003c/h3\u003e\n\u003cp\u003eIt helps users find nearby public restrooms. real-time crowd data, wheelchair accessibility, user reviews, location maps, and elevator info.\u003c/p\u003e\n\u003ch3 id=\"parking-finder-app\"\u003eParking Finder App\u003c/h3\u003e\n\u003cp\u003eIt shows available parking spaces near sightseeing spots. real-time availability, price comparison, distance to destination.\u003c/p\u003e\n\u003ch3 id=\"community-feedback-participatory-budgetary-system\"\u003eCommunity feedback participatory budgetary system\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCrowd sourcing\u003c/li\u003e\n\u003cli\u003eUse geolocation\u003c/li\u003e\n\u003cli\u003eMonitor progress, suggest, discuss, vote etc\u003c/li\u003e\n\u003cli\u003eImage processing\u003c/li\u003e\n\u003cli\u003eMachine learning based rating system -\u0026gt; Agree or Disagree -\u0026gt; Motivates their transparency\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"citizen-based-participatory-budgeting-system\"\u003eCitizen Based Participatory Budgeting System\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eData Sets from Government website\u003c/li\u003e\n\u003cli\u003eGather feedbacks from Citizens\u003c/li\u003e\n\u003cli\u003eAnalyze feedback to improve the quality and motivate their transparency by being monitored\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"smart-food-scanner-a-personalised-ingredient-detection-app\"\u003eSmart Food Scanner: A Personalised Ingredient Detection App\u003c/h3\u003e\n\u003cp\u003eMany international students and residents in Japan, including those who follow halal, vegetarian, vegan diets, or have specific food allergies, often face difficulties identifying suitable food options in convenience stores due to language barriers and unclear ingredient labelling.\u003c/p\u003e","title":"[Group Documentation] April 15 2025"},{"content":"Ideas: Highway Route Optimization Would optimize the route across an expressway for vehicles to avoid traffic.\nLow-Light Area Detectors Use location of areas that are not lit up during the night to advise the government where to install street-lighting systems to improve nighttime visibility and increase safety of such low-light areas.\nUrban Shadow-Tracker Detects public areas with too much and too less shade to predict and provide recommendations for the government to plant trees and install solar panels to reduce public over-exposure to solar radiation.\nAdvanced Job-Matching Software Problem Statement: In recent times, the job market has been fiercely competitive, meaning that the number of applicants outnumbers the number of jobs available. Moreover, many new occupations and skills are emerging in the market, but potential employees cannot utilise these opportunities due to their lack of familiarity with them.\nObjective: I propose to use data analytics to find these emerging skill gaps in the workforce market and match people having such skills to jobs with a growing demand requiring them.\n","permalink":"https://xknt21.github.io/contents/apr11/","summary":"\u003ch2 id=\"ideas\"\u003eIdeas:\u003c/h2\u003e\n\u003ch3 id=\"highway-route-optimization\"\u003eHighway Route Optimization\u003c/h3\u003e\n\u003cp\u003eWould optimize the route across an expressway for vehicles to avoid traffic.\u003c/p\u003e\n\u003ch3 id=\"low-light-area-detectors\"\u003eLow-Light Area Detectors\u003c/h3\u003e\n\u003cp\u003eUse location of areas that are not lit up during the night to advise the government where to install street-lighting systems to improve nighttime visibility and increase safety of such low-light areas.\u003c/p\u003e\n\u003ch3 id=\"urban-shadow-tracker\"\u003eUrban Shadow-Tracker\u003c/h3\u003e\n\u003cp\u003eDetects public areas with too much and too less shade to predict and provide recommendations for the government to plant trees and install solar panels to reduce public over-exposure to solar radiation.\u003c/p\u003e","title":"[Group Documentation] April 11 2025"},{"content":"Ideas: Toilet Finder Application This is a smart app feature designed to help users easily and effectively find public toilets in their environment. It\u0026rsquo;s especially helpful for those with special needs, such as the disabled or even clean and accessible toilet hunters. Here\u0026rsquo;s how it works:\nRush Hour Detection: The application cross-checks the time and location information to find out how busy certain restrooms are. At rush hour, it will suggest less busy ones around so the users don\u0026rsquo;t have to wait.\nWheelchair Accessibility: The application screens and displays restrooms that are wheelchair-friendly. That is, facilities such as ramps, bigger doors, and handrails, so that the toilets are accessible and safe as well.\nRatings and Reviews: One can see the ratings of how clean, well-maintained, and functional every toilet is. One can even post their reviews and comments, allowing others to make the right choice.\nLive Location Display: It indicates the precise location of all toilets on a map with directions and walking distance estimated from the user\u0026rsquo;s position.\nAccessibility Information: It indicates whether the region is accessible with or without lifts for the disabled.\nParking Finder Application There is always a problem of people being unable to find a parking space within and around the tourist area. This App is a simple facility to help people locate vacant parking lots in an efficient way. It provides instant feedback on the number of available parking spaces, notifying the users whether the lot is full or not. This impedes parking cruising frustration, especially in busy city centres. Besides availability, the app also shows how much per parking space so that the users can see prices at a glance and compare in an instant. If anyone needs the nearest or the lowest priced one, then one can make the right choice with knowledge in a flash. The application also shows the exact location and distance of the parking lots from where the user is located, thus making the process an easy and convenient task.\nCarbon Emission Application The application is an original aspect that tracks and shows the level of carbon emissions in locations. The application can make estimates of the quantity of carbon dioxide emitted in an area depending on real-time environmental information.\nApplication for Blinds The application is intended for blind individuals who may require assistance with items in their lives, especially where they are new or challenging areas. If a user needs help, say to cross the road, move through a building, or get over some unexpected barrier, a person can use the app for help requests. The application then connects them with local volunteers, support staff, or assigned helpers who provide live comments. Through the incorporation of features like voice commands, global positioning, and live chat, the app provides location-based support at the moment to the blind person, thereby enhancing their safety and autonomy away from home.\nGovermental Transparency This is the main concern of the app in providing transparency and accountability for government spending. It aggregates data from official government reports and publicly disseminated announcements, following where tax dollars are flowing and being spent on what projects and initiatives. The app lays this out in plain, easy-to-understand terms, so users can easily see where the money is heading—infrastructure, education, healthcare, or otherwise. Through elucidating the monetary flows, the citizens are placed in a position where they have more knowledge and are interested in understanding how the government operates, thereby having a greater level of trust and responsive governance.\nMaximal Utilisation of Agricultural Land This is an influential aspect that leads to the productivity of a certain land. The higher productivity reduces the shortage of certain crops within a specific location. The applied information will be climatic information, soil information, and agricultural information. With this, the app would recommend a package of crops to communal farmers and occupational farmers. Farmers would choose one of the crops recommended in a bid to experience the highest possible yield, which would be most rewarding and combat communal hunger. Evacuation Assistant would lead the software user to evacuate a building room by determining the shortest path from the user to the exit, with robots/drones to scout around and check if it\u0026rsquo;s safe to proceed down that path.\n","permalink":"https://xknt21.github.io/contents/apr8/","summary":"\u003ch2 id=\"ideas\"\u003eIdeas:\u003c/h2\u003e\n\u003ch3 id=\"toilet-finder-application\"\u003eToilet Finder Application\u003c/h3\u003e\n\u003cp\u003eThis is a smart app feature designed to help users easily and effectively find public toilets in their environment. It\u0026rsquo;s especially helpful for those with special needs, such as the disabled or even clean and accessible toilet hunters. Here\u0026rsquo;s how it works:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRush Hour Detection:\u003c/strong\u003e  The application cross-checks the time and location information to find out how busy certain restrooms are. At rush hour, it will suggest less busy ones around so the users don\u0026rsquo;t have to wait.\u003c/p\u003e","title":"[Group Documentation] April 8 2025"},{"content":"Smart Re-Identification Application for Stray Cats Post-SNR Program Overview This project aims to develop an application capable of re-identifying stray cats that have been released following Shelter-Neuter-Return (SNR) programs. By capturing and uploading an image of a cat, users will be able to retrieve associated shelter records if the cat had previously been housed.\nThe system primarily addresses challenges related to post-shelter adoption by enabling potential adopters to determine the adoption status of stray cats outside the shelter environment.\nAdditionally, it offers broader support for stray cat population management and monitoring initiatives.\nKeywords: adoption; shelter; stray; re-identification; image recognition; SNR; Shelter-Neuter-Return\n1. Problem Statement - Background Urban animal shelters in many regions are overburdened and face legal or ethical restrictions against euthanizing animals. As a result, many cats that were once sheltered are returned to city streets.\nTo control the growing population of stray cats, many governments or organizations implement TNR (Trap-Neuter-Return) or SNR (Shelter-Neuter-Return) programs. However, research has shown that simply implementing those programs is unable to decrease the number of stray cats, and that increasing the adoption rate is still the only approach [1].\nAdditionally, the process of adoption has multiple barriers. For example, shelters lose track of these cats after release, making it difficult to monitor their health or facilitate potential adoptions.\nIt is essential to lower the barriers to increase the adoption rate [2].\nThere\u0026rsquo;s a need for a data-driven system that allows society to stay connected to these animals, even after release.\n2. Vision - Goals The primary vision of this project is to modernize the management of stray cat populations by introducing a scalable, AI-based re-identification system that can recognize individual stray cats after their release. This system aims to bridge the current welfare gap caused by the inability to track post-release cats, thereby improving both animal welfare and resource efficiency in shelters [10] [11].\nWe envision a society where stray cats are no longer invisible after neutering and release. Instead, each cat will have a persistent digital profile that shelters and citizens can access, update, and use for health monitoring, rescue operations, and potential adoption promotion. Such visibility can drastically increase rescue rates, reduce redundant neutering operations, and boost responsible citizen participation [11].\nA second major goal is to support environmental conservation. By keeping track of stray cat populations and their health, local governments can control ecological impacts caused by stray cats, especially predation on native wildlife [11]. An organized system would also help local governments better allocate public resources, avoiding unnecessary financial waste through smarter capture and treatment strategies [10].\nUltimately, this project aims to serve as a global model. If successful, the solution developed here could be replicated internationally, especially in countries like Japan, Taiwan, Australia, the UK, and the US, where stray cat issues are a major urban problem [7] [8] [9].\nThus, the vision is to create a humane, efficient, and sustainable system that improves the lives of stray cats, supports shelter operations, protects urban biodiversity, and fosters a sense of shared responsibility between citizens and local governments.\n3. Objectives - Features to be Realized 3.1 Promote adoption Currently, people who wish to adopt cats often need to actively search for adoption information through websites, visit shelters, or attend occasional adoption events.\nOur project addresses this by allowing citizens to simply take a picture of a street cat using their smartphones and instantly receive information about the cat’s adoption status.\n3.2 Track post-release wellbeing After release, monitoring the condition of cats becomes almost impossible under traditional SNR programs. Our application offers a solution by digitally tracking sightings of identified cats. Shelters and citizens can help monitor the cats’ health and general well being over time. Early detection of health issues, injuries or behavioral changes can lead to timely intervention, thus improving overall urban animal welfare.\n3.3 Verify vaccination Public safety and animal health are critical concerns. Through our system, users can instantly verify a cat’s vaccination status by scanning them. Knowing whether a cat is vaccinated in real time fosters safer interactions and encourages a more positive perception of stray cats in urban environments. It also assists authorities and shelters in managing vaccination schedules effectively .\n3.4 Enhance social connection Often, street cats are viewed as anonymous creatures with little to no personal connection to the human community. By enabling citizens to recognize and learn the stories of individual cats, the application helps to personalize interactions. When people know a cat’s name, history, or past adoption attempts, it can trigger empathy and emotional bonding, promoting a sense of shared responsibility toward these animals and strengthening community ties.\n4. Scope 4.1 Issues at Hand Caused by the Major Problem Large Number of Stray Cats Taiwan faces a major stray animal issue, with over 160,000 stray cats and dogs reported [10]. This number is increasing yearly due to abandonment and unregulated breeding. Globally, the problem is even bigger; for example, the USA alone has an estimated 30–80 million stray cats living on the streets [12]. These high numbers show that stray animals are a long-term and large-scale problem that cities are struggling to manage.\nShelters Are Overloaded In Taiwan, shelters can accommodate only about 3% of stray animals [10]. This means 97% of strays remain outside or are re-released through SNR programs. Overcrowded shelters cannot properly care for the animals, and new arrivals are often turned away. Therefore, SNR becomes a necessary but imperfect solution where the animal is released but loses all official connection to the shelter system.\nPost-Release Cats Are Forgotten After being neutered and returned, these cats are no longer tracked by shelters [10]. There’s no monitoring for illnesses, injuries, or changes in behavior. This creates a huge welfare gap — if a cat gets sick or hurt after release, no one notices unless a random citizen reports it. The lack of a reconnection method also limits opportunities for future adoption or rescue.\nCurrent Tracking Methods Are Weak The only current method of identifying SNR cats is through ear-tipping, a practice where a small part of the cat’s ear is clipped to indicate it was neutered [12]. However, ear-tipping does not distinguish individual cats. It tells you the cat has been neutered, but not which cat it is. There is no system to recognize a particular cat or follow its health or status over time.\nFinancial Costs Are Huge Managing strays without a tracking system is extremely cost-inefficient. Taiwan’s local governments spend millions each year on capturing, neutering, and handling stray animals [3]. Without good tracking, shelters and government workers waste resources by mistakenly re-catching neutered cats or failing to prioritize sick ones. Long term, this drives up costs for cities and leads to inefficient use of public funds.\n4.2 Benefits to Solving This Problem Improves Animal Welfare Having a system to identify and monitor released cats would help shelters and citizens quickly detect illnesses or injuries. Sick or hurt cats could be rescued faster instead of being left unnoticed on the streets. This would significantly improve the quality of life for thousands of animals [10].\nSaves Shelter Resources Smart re-identification could reduce unnecessary effort for shelters. Instead of capturing cats blindly, they could target cats that need urgent care based on updated information. This means shelters can spend more time and money on treatment, adoptions, and education programs rather than redoing work [10].\nBoosts Cat Adoption Rates With a system that can recognize individual cats on the streets, citizens interested in adoption could look up information easily. If a particular stray is healthy and friendly, it would be much easier to promote and find adopters. This could increase adoption rates and reduce the overall stray population [12].\nProtects Other Wildlife Stray cats are known to hunt and harm native wildlife, especially birds and small mammals [12]. By keeping better track of stray cats, cities could reduce the ecological impact caused by unmonitored cat colonies, helping to protect biodiversity.\nUses Modern Technology for Purposes Beneficial to the Environment AI-driven re-identification technologies (like Siamese Networks) are already showing success in identifying individual animals [4]. Applying this technology to stray cats offers a practical, scalable solution to a real social problem. It also opens the door for similar smart monitoring systems for other urban animals worldwide.\nIn summary, this problem is worth solving because, the stray cats at large cause and overload in available shelters, further causing sheltered cats to be forgotten after their release, which is fuelled by the lack of modernization in the methods used to track them. Solving this major problem would improve the welfare of the cats and other animals around them, further saving resources and other local wildlife, along with boosting adoption rates for stray cats. This project encourages the use of modern information systems for this specific purpose as related projects have demonstrated accordingly.\n5. Limitations and Risks This application relies on the shelters or organizations to build up the data of information of cats, which indicates that the cats must be sheltered once to leave the record. Also, it leads to greater costs needed to promote the SNR program. There is a substantial risk of sharing the location where the cats usually stay as there are perpetrators of cat abuse. It may be more secure if the locations are only shared with the shelter or organizations to be able to perform any rescue if needed. As the application requires users to upload and share the location of the photos, there may be potential risk in users’ privacy too.\n6. Sustainability Initially, the application will be developed from a limited database of stray cat images collected by the team. As the user base grows, the system can implement a feature to identify and re-identify cats not present in the original database. Through repeated sightings and visual pattern matching, the app can gradually assign unique profiles to these cats, allowing the database to expand dynamically. This approach enables the system to adapt to new environments and continuously improve its accuracy through real-world usage and community feedback.\n7. Data Strategy 7.1 Data Acquisition To support the identification and re-identification of stray cats, our team will collect image data from multiple sources, focusing on capturing cats from various angles (ideally 360-degree coverage) to ensure robust pattern recognition. The primary data acquisition methods are as follows:\n7.1.1 Using Existing Online Datasets First, we will search for publicly available datasets that contain images of cats. Some research communities and open-access repositories provide datasets featuring cats in various environments, which can serve as a foundation for building our database.\n7.1.2 Directly Contacting Animal Shelters To supplement existing datasets, we will directly contact animal shelters and rescue organizations to request access to their photo archives. These institutions often take multiple photos of each animal from different angles for adoption purposes, which would be highly valuable for our re-identification training.\n7.1.3 Web Scraping from Shelter Websites If we are unable to find a sufficient amount of data through existing datasets or direct contact with shelters, we will use web scraping techniques to collect images from the websites of animal shelters. This method will be used carefully, ensuring compliance with legal and ethical standards regarding data collection.\nAll images will be preprocessed for quality and privacy compliance.\n7.2 Data Processing - Preprocessing Collected images will undergo:\n7.2.1 Cleaning: Remove blurry, duplicate, or corrupted images. 7.2.2 Standardization: Resize images and normalize pixel values. 7.2.3 Annotation: Add metadata (e.g., unique IDs, shelter info, location). 7.2.4 Augmentation: Apply flipping, rotation, brightness adjustments, and cropping. Images will be used to train CNNs, creating vector embeddings for rapid matching.\n7.3 Data Science Techniques The following data science techniques will be used to power the smart stray cat re-identification system:\n7.3.1 Image Preprocessing with OpenCV (Pre-Processing)\nAll collected images will undergo preprocessing steps such as resizing, normalization, noise reduction, and edge detection using OpenCV. These steps will improve the quality and consistency of data used for model training.\n7.3.2 Feature Extraction Using Convolutional Neural Networks (CNNs) (Extracting features of cats)\nWe will use pre-trained deep learning models such as ResNet or MobileNet for extracting distinguishing visual features like fur pattern, eye shape, and ear position. These models are well suited for image-based classification tasks.\n7.3.3 Siamese Network for Re-Identification (Recognition)\nTo determine whether two images represent the same cat, we will use a Siamese Neural Network trained with contrastive loss or triplet loss. These models are effective in learning a similarity function and have been used in human and animal re-identification tasks.\n7.3.4 Unsupervised Clustering (Classifying)\nWhen labeled data is insufficient, clustering techniques such as DBSCAN or k-means may be used to group similar cats together based on extracted features. Web Scraping as a Last Resort: If the manually collected or community-contributed images prove insufficient, we will utilize web scraping to collect cat images from public forums, social media, and open-source databases. These technologies together create a robust pipeline capable of handling the complexity and variability of real-world stray cat identification.\n7.4 Data Visualization The following data visualization techniques will be used to enhance the smart stray cat re-identification system which will feature a smart mobile application with a built-in cat recognition camera feature:\n7.4.1 Profile Cards\nAfter users submit images of the desired cat, a profile card will present essential information such as the cat’s name, breed (if identifiable), adoption status, last vaccination date (if available), and contact details for the associated shelter. Additionally, users can add additional information regarding the cat that they are reporting during the submission process, be it injuries or concerns which can be seen by other users and community members. Lastly, each cat within the database will have a unique identifier that users can refer to when searching for a specific cat’s profile.\n7.4.2 Performance Metric Dashboards\nTo maintain the reliability of the system, administrators will have access to dashboards visualizing key performance metrics such as precision, recall, and confidence scores. Bar charts, ROC curves, and simple statistical summaries will be used to monitor system accuracy and minimize false identifications. This internal visualization ensures that the app remains trustworthy for users and allows administrators to spot areas that are of concern such as a certain breed of cat not being optimized or other varying concerns.\n8. Existing Prototypes Boulaouane et al. (2024)\nUnified Pet Biometric Identification Framework (Petnow App)\nFocused on owned pets; had issues under poor image conditions [5].\nTrein and Garcia (2025)\nSiamese Networks for Street Cat Re-Identification (Hello Street Cat Initiative)\nRealistic street cat re-ID but limited flexibility [4].\nZhou et al. (2020)\nWeb Application for Feral Cat Recognition\nAutonomous monitoring system, but not user-interactive [3].\n9. Government Reports Problem in Niijima Village (Tokyo)\nRise in stray cats causing complaints. Removal without neutering only relocates the problem [6].\nProblem in Osaka City\nOverpopulation causing public nuisance; responsibility needed when feeding [7].\nUK Government Report\nDifficulty differentiating owned vs unowned cats; microchipping proposed [8].\nAustralia\u0026rsquo;s Stray Cat Impact\nPredation on wildlife and disease spread; highlights the human role in cat population issues [9].\n10. Security and Data Privacy Data collected with user/shelter consent. Stored in a private database accessible only by authorized personnel. Anonymized location data. Users and shelters can request data removal at any time. References [1] Levy, J.K.; Crawford, P.C. Humane strategies for controlling feral cat populations. J. Am. Vet. Med. Assoc. 2004.\n[2] Crawford, H.M.; Calver, M.C.; Fleming, P.A. Ethical challenges of TNR. Animals 2019. [3] Boulaouane, Y. et al. Advancing Pet Biometric Identification. IEEE Access 2024.\n[4] Trein, T.; Garcia, L.F. Siamese Networks for Cat Re-Identification. arXiv 2025.\n[5] Zhou, J. et al. Feral Cat Recognition with Deep Learning. Lecture Notes in Computer Science 2020. [6] 新島村 (Tokyo). Niijima.com.\n[7] 大阪市. City of Osaka.\n[8] Gov.uk. Microchipping Cats in England - Summary. [9] Nou, T. et al. Management of Cats by Local Governments in Australia. NESP Report. [10] 台北時報, “Protesters call for controls for strays,” Taipeitimes.com, Oct. 29, 2023. https://www.taipeitimes.com/News/taiwan/archives/2023/10/30/2003808434? (accessed Apr. 27, 2025). [11] T. Nou, S. Legge, J. Woinarski, J. Dielenberg, and G. Garrard, “The management of cats by local governments of Australia,” 2021. Available: https://www.nespthreatenedspecies.edu.au/media/uaoncte3/tsr-hub-project-7-4-report-the-management-of-cats-by-local-governments-of-australia_final.pdf [12] ASPCA, “Pet statistics,” ASPCA, 2022. https://www.aspca.org/helping-people-pets/shelter-intake-and-surrender/pet-statistics ‌\n","permalink":"https://xknt21.github.io/project/","summary":"\u003ch1 id=\"smart-re-identification-application-for-stray-cats-post-snr-program\"\u003eSmart Re-Identification Application for Stray Cats Post-SNR Program\u003c/h1\u003e\n\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eThis project aims to develop an application capable of re-identifying stray cats that have been released following Shelter-Neuter-Return (SNR) programs. By capturing and uploading an image of a cat, users will be able to retrieve associated shelter records if the cat had previously been housed.\u003cbr\u003e\nThe system primarily addresses challenges related to post-shelter adoption by enabling potential adopters to determine the adoption status of stray cats outside the shelter environment.\u003cbr\u003e\nAdditionally, it offers broader support for stray cat population management and monitoring initiatives.\u003c/p\u003e","title":"Project Proposal"},{"content":"Preface Version History Version Date Description 1.0 April 28, 2025 Finished the initial project proposal with the goal of streamlining and assisting the adoption process of stray cats. 1.1 May 26, 2025 Adjusted system structure, goal, and certain features based on interviews conducted with stakeholders. Project now focuses more on preventing hospitals from doing redundant checkups on stray cats. Completed requirements specification. Document Conventions The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.\nThis document utilizes a specification convention that separates requirements intended for user-level readers and system-level readers to suit their various reading intentions. Moreover, the document adheres to a prefix convention that follows the following format:\nFR-X.x refers to Functional Requirements with their corresponding branches or sub-requirements. Within each functional requirement, the description shall start with its user requirements, followed by the system requirements. NFR-X.x refers to Non-Functional Requirements with their corresponding branches or sub-requirements. Expected Readership This document is intended for various readers who may be involved in the development, deployment, and use of the system as indicated in the table below:\nIntended Reader Relevant Document Sections System Developers and Engineers - Version History- Document Conventions- System Functionality- Use Cases - Glossary - Functional Requirements - Non-Functional Requirements Project Managers and Coordinators - Preface - Introduction - Glossary System Analysts and Designers - Introduction - Glossary - Functional Requirements - Non-Functional Requirements End Users (Volunteers and Animal Hospital Staff) - Introduction - Glossary Administrators - Use Cases - Glossary - Functional Requirements Test Engineers - System Functionality - Use Cases - Glossary - Functional Requirements - Non-Functional Requirements Documentation Lead and Team - Preface - Glossary Introduction This document is the Software Requirements Specification (SRS) for the \u0026ldquo;Smart Re-Identification System for Stray Cats Post-TNR Program\u0026rdquo; project. It outlines the system\u0026rsquo;s functionality, expected behaviour, and constraints relevant to its deployment and use. The document aims to ensure that all stakeholders or potential users understand what the system will do and how it will operate.\nObjectives The main goal of this system is to prevent redundant medical checkups on stray cats by enabling volunteers and animal hospitals to verify if a cat has already been captured and treated. The system achieves this by using a re-identification system to match submitted photos of stray cats with an existing database. The objectives can be summarised in the following points:\nPrevent the same stray cat from being taken to the hospital multiple times. Assist volunteers by providing quick and reliable re-identification of cats through images. Improve coordination among different users (individual caretakers, organisations, and animal hospitals). Increase efficiency and reduce mistakes in TNR (Trap-Neuter-Return) operations. Scope The system will initially target users in the Kansai region in Japan with the capability to accommodate up to 1000 volunteers and 3 animal hospitals. This system will only implement core functions such as photo submission, profile management, and cat profile actions for volunteers and animal hospitals.\nSystem Functionality Allow users to upload images of stray cats and receive feedback on possible profile matches. Display cat profiles which include details such as medical history, approximate age, and gender. Enable role-based account types with varying access for volunteers, animal hospitals, and organisations. Allow animal hospitals to make changes and adjustments to cat profiles and medical records Allow users to make suggestions and reports to administrators Intended End Users This system is designed primarily for the following groups who are actively involved in the care and management of stray cats. Each user group interacts with the system in different ways, and their specific needs have been considered in the requirements specification.\n1. Individual Volunteers\nIndividual caretakers or citizens who care for stray cats in their local areas. They will be able to submit cat sightings, upload images, and check for past records to help institutions avoid redundant capture or treatment. They will fall under the volunteer class in the system.\n2. Animal Rescue Organisations (e.g., TNR Groups, NPOs, Community Members)\nFormal or informal groups involved in TNR (Trap-Neuter-Return) or rescue activities. They use the system for cat status tracking, profile management, and collaboration with animal hospitals. They will fall under the volunteer class in the system.\n3. Veterinary Clinics and Animal Hospitals\nThese facilities use the system to avoid treating the same cat multiple times, access a cat’s vaccination/surgery records, and any necessary documentation. They will fall under the animal hospital class in the system.\nUse Cases Use Case Diagram User Classes Characteristics Volunteer: Includes individual caretakers, rescue groups, and TNR organizations.\nAnimal Hospital: Clinics and staff involved in stray cat intake and treatment.\nAdministrator: System-level operators responsible for moderation and account management.\nUse Case Table Number Name Description Associated Functional Requirement(s) U-1 Sign up User creates a new account in the system. FR-1, FR-13 U-2 Log in User accesses their account with credentials and recovers the password (if needed). FR-5, FR-15 U-3 Edit Account Details Users update their account or profile information. FR-3, FR-13, FR-15 U-4 Delete Account User requests to delete their account and associated data. FR-6 U-5 Upload Image User uploads an image of a stray cat for re-identification. FR-7, FR-16 U-6 View Matching Result User receives feedback if the uploaded cat matches an existing record, including confidence score. FR-8, FR-16 U-7 Report Incorrect Match Users report if they think an image matching result is incorrect. FR-8, FR-12 U-8 View Cat Profile User views details and medical history of a cat profile. FR-9, FR-11 U-9 Add Cat Profile Animal hospital staff can create a new cat profile. FR-10, FR-13 U-10 Edit Cat Profile Staff update information for an existing cat profile, including medical/treatment records. FR-10, FR-11, FR-13 U-11 Delete Cat Profile Staff can delete a cat’s profile from the system. FR-10, FR-15 U-12 Manage User Accounts Administrator manages user accounts: view, activate, deactivate, delete, etc. FR-2, FR-15 U-13 View System Analytics System-generated reports/visualizations on statistics and trends viewed by admin. FR-14 U-14 Verify Account Authorized staff review documentation and verify or reject user accounts. FR-2, FR-4 U-15 Activate Account Administrator or staff activates a user account after verification. FR-2, FR-4 U-16 Manage Cat Profile Administrators oversee the addition, editing, or deletion of cat profiles. FR-10, FR-15 U-17 Send Mail to Users System or staff send notifications, messages, or emails to users, maintaining user privacy. FR-1, FR-3 - FR-5, FR-8, FR-12 U-18 Receive User Reports Administrator receives user-submitted feedback or incident reports. FR-8, FR-12 U-19 Manage Re-ID Matches Authorized personnel review, confirm, or adjust image-based re-identification matches. FR-8, FR-14, FR-16 Glossary General Terms Term Definition Confidence Score A numerical value (typically between 0% and 100%) that indicates how certain the Re-ID model is that a submitted cat image matches an existing profile. Data Anonymization The process of removing or blurring private and sensitive information (e.g., name, location) to protect user privacy in stored or shared data. Functional Requirements (FR) Statements that describe specific behaviors, features, or functions the system must perform to meet user needs. Image Validation A system process that checks if an uploaded image meets required criteria, such as resolution and file format before accepting it. Mobile-Friendly Interface A user interface designed to be easily usable on mobile devices, ensuring proper layout, touch support, and responsive behavior. Non-Functional Requirements (NFR) System requirements that define performance, usability, security, and other quality attributes, rather than specific features or functions. Photo Submission Workflow The sequence of steps a user follows to capture, upload, and submit a cat photo for recognition by the system including prompts like “Take Photo” or “Submit.” Re-Trap Case A scenario where the same stray cat is unintentionally captured and brought for check-up more than once due to a lack of a tracking system. Recognition Result The system\u0026rsquo;s output after attempting to match an uploaded cat image to an existing profile, including whether a match was found and the confidence score. Reporting and Visualization Features that allow users and administrators to monitor system performance and data (e.g., successful matches, system usage) through charts or summaries. System Scalability The system’s ability to handle increasing amounts of data, users, or image submissions without performance degradation. Timestamp The recorded date and time at which a specific action (e.g., photo upload, profile update) occurs in the system. User Engagement Prompt A message from the system encouraging users to take additional actions, such as signing up, reporting issues, or verifying results. User Roles The different categories of users in the system (e.g., volunteers, animal hospital staff, administrators), each with defined permissions and intended responsibilities. Visual Accessibility Design features that ensure the interface is usable by people with visual impairments, such as proper color contrast and screen reader compatibility. Functional Requirements FR-1 – Account Creation Users MUST be able to create an account through the application.\nSystem Requirements\nFR-1.1 System MUST provide a registration interface for new users with required fields based on the following user types.\nIndividual caretaker: full name, contact information (eg. email, phone number), region of living Organization: legal name of organization, type of organization(eg. NPO, community group, rescue team), contact information (eg. link to website, email), mission statement or description of service Animal hospital: hospital name, type of facility (eg. general veterinary clinic, emergency hospital, speciality center), physical address, contact information (eg. email, phone number) FR-1.2 System MUST validate input formats and required fields before allowing account creation.\nFR-1.3 System MUST securely store user information, including hashed passwords.\nFR-1.4 System MUST notify the user upon successful registration or return appropriate response upon rejection.\nFR-2 – Account Administration Authorized users MUST be able to manage user accounts.\nSystem Requirements\nFR-2.1 System MUST allow administrators to view, activate, deactivate, or delete accounts.\nFR-2.2 System MUST restrict administrative capabilities to authorized roles (e.g., administrators, verified staff).\nFR-2.3 System MUST log all administrative actions for auditing purposes.\nFR-3 – Edit Profile Users MUST be able to update their personal or organizational profile information.\nSystem Requirements:\nFR-3.1 System MUST provide an editable user profile interface for personal or organization-specific information.\nFR-3.2 System MUST validate updated data before saving changes.\nFR-3.3 System MUST allow users to update profile images, contact information, and description fields.\nFR-3.4 System MUST notify users when their profile is edited.\nFR-4 – Account Verification and Activation All accounts MUST undergo verification before gaining full access.\nSystem Requirements\nFR-4.1 System MUST require document uploads (e.g., ID, certificates) for verification depending on user type.\nFR-4.2 System MUST provide a review interface for authorized personnel to approve or reject verification requests.\nFR-4.3 System MUST notify users when verification is completed or requires correction.\nFR-4.4 System MUST restrict feature access until the account is verified and activated.\nFR-5 – Password Recovery Users MUST be able to recover access to their account if credentials are lost.\nSystem Requirements\nFR-5.1 System MUST provide a secure password reset mechanism using email or other identity confirmation methods (e.g. phone number).\nFR-5.2 System MUST allow users to create a new password after successful identity verification.\nFR-5.3 System MUST expire password reset links after a defined duration.\nFR-6 – Account Deletion Users MUST be able to delete accounts in accordance with privacy regulations.\nSystem Requirements\nFR-6.1 he system MUST support account deletion functionality initiated by the user\nFR-6.2 System MUST confirm the deletion request with the user before proceeding.\nFR-6.3 System MUST anonymize or remove personal data associated with the deleted account, except data required for legal compliance or auditing.\nFR-6.4 System MUST notify the user when the account has been successfully deleted.\nFR-7 – Photo Upload by Users Users MUST be able to upload photos of stray cats using their smartphone through the application.\nSystem Requirements FR-7.1\nThe system MUST provide an interface that allows users to select an existing image or capture a new one using their device\u0026rsquo;s camera.\nFR-7.2\nThe system MUST allow users to optionally attach metadata such as a timestamp to the uploaded image.\nFR-7.3\nThe system MUST validate that the uploaded file is in a supported format: .jpg, .jpeg, or .png.\nFR-7.4\nThe system MUST validate that the uploaded file meets the minimum resolution requirement of 1280 x 720 pixels.\nFR-7.5\nThe system MUST return an appropriate message if the uploaded file does not meet the specified format or resolution criteria.\nFR-7.6\nThe system MUST ensure that the uploaded image does not exceed a file size of 5MB.\nFR-7.7\nThe system MUST process the uploaded image by testing it against the image-based re-identification model and compute a confidence score against stored cat profiles in the database.\nFR-8 – Cat Re-identification Result Users MUST be able to receive a response indicating whether the uploaded cat matches an existing record in the system.\nSystem Requirements FR-8.1\nThe system MUST compare the uploaded image against the cat image database using a trained re-identification model.\nFR-8.2\nThe system MUST classify re-identification match results into three confidence tiers and respond accordingly:\nHigh Confidence (≥ 80%):\nThe system MUST indicate that a match was found and show an appropriate interpretation of the confidence score (e.g., \u0026ldquo;Very Likely Match\u0026rdquo;).\nModerate Confidence (60% to \u0026lt; 80%):\nThe system MUST display a warning that the result is uncertain (e.g., \u0026ldquo;Possible Match – Needs Confirmation\u0026rdquo;).\nThe user MUST be given the option to confirm, reject, or report the match.\nLow Confidence (\u0026lt; 60%):\nThe system MUST notify the user that no reliable match could be found.\nThe user MUST be given the option to report the match if they believe that it’s a false re-identification.\nFR-8.3\nIn all cases where a user uploads an image, the system MUST show the numerical confidence score (e.g., “Match Confidence: 76.3%”) alongside the cat’s profile.\nFR-8.4\nThe system MUST log all Re-ID match attempts for details such as confidence score, number of successful matches, and match result to support analytics and future model tuning.\nFR-9 – Display of Cat Profiles When a cat is recognized, the system MUST present relevant information about the cat to the user.\nSystem Requirements\nFR-9.1\nThe system MUST retrieve and display the following fields from the database for a matched cat:\nApproximate age\nGender (e.g., male/female)\nVaccination status (e.g., vaccinated: yes/no)\nNeuter status (e.g., neutered: yes/no)\nMedical history (e.g. surgery)\nFR-9.2\nThe system MUST display an edit history of the profile and display the following:\nHospital name (e.g. Osaka Animal Hospital)\nDate (e.g. 2025年5月25日)\nTreatment/medical procedure (e.g. front left leg surgery)\nFR-9.3\nThe system MUST present the above information in a clear, readable, and mobile-friendly format, accessible immediately after the recognition result is returned.\nFR-10 – Cat Profile Management Animal hospital staff MUST be able to create, edit, and delete individual cat profiles within the system. These profiles serve as the foundation for tracking medical status, re-identification accuracy, and adoption readiness.\nSystem Requirements:\nFR-10.1\nThe system MUST allow hospital staff to create new cat profiles including essential details such as:\nName or temporary ID\nPictures\nPhysical/medical condition\nNotes or observations\nFR-10.2\nThe system MUST support editing and deletion of existing cat profiles, with proper authentication and role-based access control.\nFR-10.3\nThe system MUST support uploading of two to nine images per cat (e.g., front, side, top views) to enhance identification accuracy.\nFR-10.4\nThe system MUST support tagging of profiles with relevant attributes such as:\nSpayed/Neutered\nInjured\nUnder treatment\nReleased\nFR-10.5\nUpon profile submission, the system MUST return a result indicating whether the cat is already registered. If a match with a confidence score higher than 60% is found, the associated cat profile must be displayed with the confidence score.\nFR-10.6\nThe system MUST allow the administrator to manage all uploaded content in the profile.\nFR-11 – Medical and Treatment Records The system MUST enable animal hospital staff to log and manage medical histories for each cat, ensuring accurate documentation of treatments and follow-up care requirements.\nSystem Requirements:\nFR-11.1\nThe system MUST allow authorized staff to record medical details for each cat, including:\nVaccinations (e.g., rabies, FVRCP)\nTreatments (e.g., deworming, antibiotics)\nSurgeries (e.g., spay/neuter, injury-related procedures)\nFR-11.2\nThe system MUST be able to flag cats requiring follow-up care based on predefined timelines (e.g., post-surgery checks, vaccination boosters), and notify staff accordingly.\nFR-12 – Feedback System Users MUST be able to report any problems through a form.\nSystem Requirements:\nFR-12.1\nThe system MUST allow users to input the following:\nFull name\nContact information (e.g. e-mail address, phone number)\nFeedback\nFR-12.2\nThe system MUST send a notification to the administrator if a user submits a form.\nFR-13 – Data Entry Support To streamline hospital operations, the system MUST offer convenient and reliable methods for staff to input and manage data, even in field conditions or areas with unstable connectivity.\nSystem Requirements:\nFR-13.1\nThe system MUST provide mobile- and tablet-friendly interfaces for efficient data entry, optimized for use on touchscreen devices.\nFR-13.2\nThe system MUST support offline data entry, allowing staff to input information without an active internet connection, and automatically sync the data once connectivity is restored.\nFR-14 – Reporting and Visualization The system MUST enable administrators to access automatically generated reports and visualizations that present statistics pertinent to cat adoption and related activities within the domain of the application. These capabilities are intended exclusively for administrators to support oversight, analysis, and data-driven management.\nSystem Requirements:\nFR-14.1:\nThe system MUST automatically generate up-to-date statistical reports relevant to the application domain. The reports MUST include, but are not limited to, the following metrics:\nTotal number of cat profiles in the system Number of high-confidence matches to cat profiles Number of moderate-confidence matches to cat profiles Number of low-confidence matches to cat profiles Number of cats that have been neutered (keep neuter cases) FR-14.2:\nThe system MUST ensure that all generated reports and accompanying visualizations are presented in a clear, accessible, and easily interpretable format suitable for administrative review and analysis.\nFR-14.3:\nThe system MUST restrict access to these statistical reports and visualizations such that only administrators have the ability to view this critical data.\nFR-15 – Access Control and Logging The system MUST enforce role-based access control and maintain a transparent audit trail to ensure data integrity, accountability, and proper authorization across user actions.\nSystem Requirements:\nFR-15.1\nThe system MUST restrict functionality and editing privileges based on user roles, such as:\nAdministrators: Full access, including approval and deletion\nAnimal hospital staff: Profile and medical data management\nVolunteers: Viewing and reporting only\nFR-15.2\nThe system MUST log all changes made to cat profiles, including:\nWhat was changed\nWho made the change\nWhen the change occurred\nThe system MUST display a modification history within each profile for transparency and tracking.\nFR-16 – System Workflow for Image Processing The system MUST follow a structured and reliable workflow when processing uploaded images to ensure accurate re-identification, appropriate data handling, and timely notifications to relevant stakeholders.\nSystem Requirements:\nFR-16.1\nThe system MUST process each newly uploaded image by attempting to match it against existing cat profiles using the Re-Identification (Re-ID) algorithm.\nFR-16.2\nIf a match is found, the system MUST display the corresponding cat profile and confidence score to the user who uploaded the image.\nNon-Functional Requirements Product Requirements: Product-Usability NFR-1 – Guided Submission Workflow The system MUST offer a streamlined and user-friendly photo submission flow to guide users through reporting a stray cat.\nSystem Requirements\nNFR-1.1\nThe system MUST display visual prompts and simple call-to-action buttons (e.g., “Take Photo,” “Retake,” “Submit”) at each step of the report process.\nNFR-1.2\nThe system MUST provide inline guidance or tooltips when the user is entering optional details such as color or injuries.\nNFR-2 – Recognition Result Clarity The system MUST provide clear and concise feedback on whether the uploaded cat photo matches an existing cat.\nSystem Requirements\nNFR-2.1\nThe system MUST display a message indicating whether a match was found (e.g., “High Confidence Match Found”, “Moderate Confidence Match Found”, or “No Match Found”) and confidence score ((e.g., “70 % ”)).\nNFR-2.2\nThe system MUST include a clear visual transition to the cat profile page when a match is successful.\nNFR-3 – Visual and Mobile Accessibility The system MUST be designed for ease of use on a range of screen sizes and meet essential accessibility needs.\nSystem Requirements\nNFR-3.1\nThe system MUST meet at least WCAG 2.2 Level AA compliance standards for visual accessibility.\nNFR-3.2\nThe system MUST use responsive design techniques to ensure usability across common mobile and desktop devices.\nNFR-3.3\nThe system SHOULD support touch-optimized components (e.g., large buttons, swipe gestures) for mobile users.\nNFR-4 – Performance The system MUST respond to image upload and recognition tasks within a reasonable timeframe to maintain user engagement.\nSystem Requirements\nNFR-4.1 The system shall allow users to upload an image (≤5MB) within 3 seconds under normal network conditions.\nNFR-4.2 The system shall process and return cat identification or re-identification results within 10 seconds of image upload.\nNFR-4.3 The system shall support at least 100 concurrent users performing uploads or profile searches without noticeable degradation in performance.\nNFR-4.4 Queries such as “cats available for adoption” or “recent rescues” shall return results within 2 seconds.\nNFR-4.5 All data updates (e.g., new cat entry, image upload) shall reflect across all user views within 5 seconds of submission.\nNFR-4.6 The application shall maintain 99.5% uptime on a monthly basis.\nNFR-5 – Space The system MUST be installable and operate correctly within 500MB of disk space.\nSystem Requirements\nNFR-5.1 The installation drive MUST have at least 500MB of available disk space prior to installation.\nNFR-5.2 The system SHOULD notify the user if insufficient space is available before installation begins.\nProduct Dependability NFR-6 – Dependability and System Reliability The system MUST ensure stable, secure, and consistent performance for users, particularly in environments with network instability, multiple concurrent users, and critical data operations. System Requirements\nNFR-6.1\nThe system MUST maintain a minimum of 99.5% uptime on a monthly basis to ensure availability to volunteers and shelter staff.\nNFR-6.2\nThe system MUST support a minimum of 1000 concurrent users uploading images or searching profiles without performance degradation.\nNFR-6.3\nThe system MUST allow users to upload images (≤5MB) within 3 seconds under normal network conditions.\nNFR-6.4\nThe system MUST return cat identification or re-identification results within 10 seconds of image upload.\nNFR-6.5\nThe system MUST reflect all data updates (e.g., new cat entry, image upload) across user interfaces within 5 seconds.\nNFR-6.6\nThe system MUST enable offline data entry and automatically sync updates once the device reconnects to the internet.\nNFR-6.7\nThe system MUST store audit logs of critical actions (e.g., data edits, logins) and restrict log access to authorized personnel only.\nNFR-6.8\nThe system MUST support secure session handling, including session expiration after inactivity and secure token regeneration.\nProduct-Efficiency-Security NFR-7 – Secure User Authentication and Authorization The system MUST ensure that only authorized users can access protected resources and perform actions appropriate to their roles.\nSystem Requirements:\nNFR-7.1\nThe system MUST enforce secure user authentication using hashed email-password combinations or social login mechanisms (e.g., OAuth2).\nNFR-7.2\nThe system MUST implement Role-Based Access Control (RBAC) to restrict system functions and data access based on user roles (e.g., animal hospital staff, organization representatives, individual caretakers, administrators)\nNFR-8 – Data Encryption and Protection The system MUST protect sensitive data by ensuring it is encrypted both during transmission and when stored.\nSystem Requirements:\nNFR-8.1\nAll sensitive data (e.g., user profiles, shelter information, cat images) MUST be encrypted during transmission using TLS.\nNFR-8.2\nAll sensitive data at rest MUST be encrypted using AES-256 or an equivalent standard.\nNFR-9 – Audit Logging and Monitoring The system MUST maintain secure and tamper-resistant logs to track critical system events and ensure accountability.\nSystem Requirements:\nNFR-9.1\nThe system MUST maintain tamper-resistant audit logs for critical actions such as login attempts, data edits, and administrative changes.\nNFR-9.2\nAccess to audit logs MUST be restricted to authorized personnel only.\nNFR-10 – Input Validation and Secure Coding The system MUST prevent security vulnerabilities by validating user input and following secure coding best practices.\nSystem Requirements:\nNFR-10.1\nThe system MUST validate all user inputs to prevent vulnerabilities such as SQL Injection, Cross-Site Scripting (XSS), and Cross-Site Request Forgery (CSRF).\nNFR-10.2\nThe system MUST use secure coding practices, including prepared statements and input sanitization.\nNFR-11 – Secure Session Management The system MUST manage user sessions securely to prevent unauthorized access and session hijacking.\nSystem Requirements:\nNFR-11.1\nThe system MUST implement session expiration after a defined period of user inactivity (e.g., 30 minutes).\nNFR-11.2\nThe system MUST use secure cookie flags and regenerate session tokens upon re-authentication to prevent session hijacking.\nNFR-12 – User Privacy and Data Control The system MUST respect user privacy by allowing control over personal data and preventing exposure of sensitive information.\nSystem Requirements:\nNFR-12.1\nThe system MUST provide users with functionality to access, update, and delete their personal data in compliance with privacy laws (e.g., GDPR).\nNFR-12.2\nThe system MUST obtain explicit user consent before collecting or storing any personal data.\nNFR-12.3\nThe system MUST anonymise sensitive metadata, such as precise geolocation and uploader identity, before publicly displaying uploaded images.\nNFR-12.4\nLocation data in user-submitted images MUST be securely stored, and when shared, it MUST be obfuscated or blurred to prevent exact location identification.\nOrganisational Requirements: Organizational-Environment: NFR-13 – Execution Environment Compatibility The system MUST be accessible on modern smartphones and browsers, and remain usable under poor network conditions.\nNFR-13.1\nTo accommodate diverse user environments, the system MUST be operational on modern smartphone devices (iOS 13+, Android 10+) and desktop browsers (Chrome, Safari, Edge).\nNFR-13.2\nThe system SHOULD maintain functionality under low-bandwidth or unstable network conditions (e.g., public Wi-Fi, 3G), ensuring image submission and basic access are still possible.\nNFR-13.3\nAll computation-heavy processes (e.g., inference, training) MUST be offloaded to cloud servers to minimise local device energy consumption and maintain consistent performance.\nNFR-14 – Physical Deployment and Geographic Resilience The system MUST be deployable in both urban and rural regions and remain reliable during natural disasters.\nNFR-14.1\nThe system SHOULD be deployable across regions with different environmental and legal conditions, and must support geographic scalability (e.g., urban vs. rural shelters).\nNFR-14.2\nIn regions prone to natural disasters (e.g., earthquakes, typhoons), cloud infrastructure MUST support data redundancy and disaster recovery mechanisms.\nNFR-15 – Environmental Impact \u0026amp; Sustainability The system MUST minimise environmental impact by using energy-efficient infrastructure and deleting unnecessary stored data.\nNFR-15.1\nThe system’s cloud services SHOULD utilise energy-efficient infrastructure (e.g., carbon-neutral cloud platforms, auto-scaling containers) to reduce the environmental footprint.\nNFR-15.2\nImage storage MUST implement automatic cleanup policies, deleting unused or expired data to reduce unnecessary resource consumption and storage costs.\nNFR-16 – Wildlife \u0026amp; Habitat Sensitivity The system MUST NOT be used in protected wildlife zones without permission, and camera data in sensitive areas should be reviewed.\nNFR-16.1\nTo avoid disturbing natural ecosystems, the application MUST NOT be used in protected wildlife zones without proper authorisation.\nNFR-16.2\nCamera data collection by users in environmentally sensitive areas SHOULD be restricted or flagged for review to ensure compliance with local environmental protection rules.\nOrganizational-Operational NFR-17 – Access Control and Data Integrity for Cat Records The system MUST allow only authorised users to manage cat records and track all changes for accountability.\nSystem Requirements:\nNFR-17.1\nThe system MUST allow authorized animal hospital staff to access, edit, and delete cat records, including status updates.\nNFR-17.2\nThe system MUST support Role-Based Access Control (RBAC) to distinguish between animal hospital staff, organizational representatives, individual caretakers, and system administrators.\nNFR-17.3\nThe system MUST record all changes to cat profiles for audit and traceability purposes.\nOrganizational-Development NFR-18 – Maintainability and Scalable Development The system MUST be built with widely supported technologies, follow modular and testable code design, and support easy updates with minimal downtime. NFR-18.1\nThe system shall be developed using widely supported and maintainable technologies such as Python (backend), TensorFlow (ML), and React Native (mobile frontend), to ensure ease of future development.\nNFR-18.2\nThe system shall follow a modular design to enable future integration with external platforms (e.g., city animal control databases or mapping APIs).\nNFR-18.3\nAll system components shall be accompanied by developer documentation, including API usage, model training setup, and data pipeline configuration.\nNFR-18.4\nDevelopment shall follow an Agile methodology, with bi-weekly sprints and iterative user feedback.\nNFR-18.5\nThe codebase shall follow industry-standard coding practices with at least 80% unit test coverage.\nNFR-18.6\nSystem updates (bug fixes or minor features) shall be deployable with minimal downtime and without requiring rollback of major modules.\nExternal Requirements: Regulatory Compliance NFR-19 – Regulatory and Ethical Compliance The system MUST comply with applicable data protection laws, ethical standards, and local animal welfare regulations in all operating regions.\nSystem Requirements:\nNFR-19.1\nThe system MUST comply with GDPR, Japan’s Act on the Protection of Personal Information, and Taiwan’s Personal Data Protection Act.\nNFR-19.2\nExplicit user consent MUST be obtained for data collection, processing, and storage, and the purpose MUST be clearly communicated.\nNFR-19.3\nThe system MUST comply with local animal protection laws and MUST NOT promote illegal or unethical behavior (e.g., unauthorized capture or harm).\nNFR-19.4\nAll identification methods MUST be non-invasive (e.g., photo-based identification only).\nNFR-19.5\nUsage in sensitive areas (e.g., protected zones) SHOULD be restricted or require coordination with appropriate authorities.\nEthical Considerations NFR-20 – Data Privacy, Security, and Abuse Prevention The system MUST protect user privacy, prevent misuse of sensitive data, and uphold transparency and control in data usage.\nSystem Requirements\nNFR-20.1\nMetadata (e.g., GPS info) MUST be stripped from uploaded images to prevent unintentional location exposure.\nNFR-20.2\nLocation data MUST NOT be publicly accessible and SHOULD be available only to verified shelters or partners.\nNFR-20.3\nAccess to sensitive information (e.g., match/location data) MUST be restricted to authenticated users with proper permissions.\nNFR-20.4\nThe system MUST include abuse reporting and usage monitoring features to prevent malicious use.\nNFR-20.5\nUsers MUST be informed how their data is used and MUST have opt-in/opt-out controls where applicable.\nSecurity \u0026amp; Legal Responsibility NFR-21 – Security, Accountability, and Legal Safeguards The system MUST ensure robust data security, enforce access control, and provide legal safeguards for both users and developers.\nSystem Requirements\nNFR-21.1\nAll stored data MUST be encrypted (e.g., using AES-256).\nNFR-21.2\nThe system MUST implement Role-Based Access Control (RBAC) to restrict sensitive data access.\nNFR-21.3\nThe system MUST implement API authentication, input validation, and rate-limiting to defend against attacks (e.g., SQL injection, DDoS).\nNFR-21.4\nSecurity audits and vulnerability scans MUST be conducted regularly.\nNFR-21.5\nAll significant actions (e.g., uploads, edits) MUST be logged with timestamp and user ID.\nNFR-21.6\nShelters SHOULD be able to export activity logs for compliance and reporting purposes.\nNFR-21.7\nUsers MUST accept the Terms of Use and Privacy Policy prior to accessing the app.\nNFR-21.8\nThe system MUST provide disclaimers to limit developer liability regarding data accuracy and match reliability.\n","permalink":"https://xknt21.github.io/requirements/","summary":"\u003ch1 id=\"preface\"\u003e\u003cstrong\u003ePreface\u003c/strong\u003e\u003c/h1\u003e\n\u003ch3 id=\"version-history\"\u003e\u003cstrong\u003eVersion History\u003c/strong\u003e\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eVersion\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eDate\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1.0\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eApril 28, 2025\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eFinished the initial project proposal with the goal of streamlining and assisting the adoption process of stray cats.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1.1\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMay 26, 2025\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eAdjusted system structure, goal, and certain features based on interviews conducted with stakeholders. Project now focuses more on preventing hospitals from doing redundant checkups on stray cats. Completed requirements specification.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"document-conventions\"\u003e\u003cstrong\u003eDocument Conventions\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eThe key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2119\"\u003eRFC 2119\u003c/a\u003e.\u003c/p\u003e","title":"Requirements Specification"}]